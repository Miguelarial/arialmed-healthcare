# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables: 
  bkstrgrg: 'arialmed-backend'
  bkstrg: 'arialmeddb'
  bkcontainer: 'tfstate'
  bkstrgkey: 'terraform.tfstate'

stages: 
  - stage: tfvalidate
    displayName: "Terraform Validation"
    jobs:
      - job: validate
        displayName: "Validate Terraform Configuration"
        steps:
          - task: TerraformInstaller@1
            displayName: "Install Terraform"
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: "Initialize Terraform"
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: 'terraform'  # Set working directory to Terraform folder
              backendServiceArm: 'arialmed-sc'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
          - task: TerraformTaskV4@4
            displayName: "Validate Terraform"
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: 'terraform'  

  - stage: tfdeploy
    displayName: "Terraform Deployment"
    dependsOn: tfvalidate
    condition: succeeded('tfvalidate') 
    jobs:
      - job: apply
        displayName: "Apply Terraform Configuration"
        steps:
          - task: TerraformInstaller@1
            displayName: "Install Terraform"
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: "Initialize Terraform"
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: 'terraform'  
              backendServiceArm: 'arialmed-sc'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
          - task: TerraformTaskV4@4
            displayName: "Plan Terraform Deployment"
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: "-out=tfplan"
              workingDirectory: 'terraform' 
              environmentServiceNameAzureRM: 'arialmed-sc'
          - task: TerraformTaskV4@4
            displayName: "Apply Terraform Deployment"
            inputs:
              provider: 'azurerm'
              command: 'apply'
              commandOptions: "tfplan"
              workingDirectory: 'terraform'  
              environmentServiceNameAzureRM: 'arialmed-sc'
